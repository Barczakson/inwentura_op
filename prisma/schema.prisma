// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"] // For Neon/Vercel Postgres
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// For production with PostgreSQL, uncomment this and comment out the SQLite datasource above
// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
//   relationMode = "prisma" // For foreign key constraints
// }

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ExcelFile {
  id          String   @id @default(cuid())
  fileName    String
  fileSize    Int
  rowCount    Int?
  uploadDate  DateTime @default(now())
  rows        ExcelRow[]
  aggregated  AggregatedItem[]
}

model ExcelRow {
  id          String    @id @default(cuid())
  itemId      String?
  name        String
  quantity    Float
  unit        String
  fileId      String
  file        ExcelFile @relation(fields: [fileId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
}

model AggregatedItem {
  id        String   @id @default(cuid())
  itemId    String?
  name      String
  quantity  Float
  unit      String
  fileId    String?
  file      ExcelFile? @relation(fields: [fileId], references: [id], onDelete: Cascade)
  sourceFiles String? // JSON array of file IDs
  count     Int?     // Number of source rows
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([itemId, name, unit])
}